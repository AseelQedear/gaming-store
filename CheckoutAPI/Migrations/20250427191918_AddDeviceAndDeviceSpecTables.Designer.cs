// <auto-generated />
using System;
using CheckoutAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CheckoutAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250427191918_AddDeviceAndDeviceSpecTables")]
    partial class AddDeviceAndDeviceSpecTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.17");

            modelBuilder.Entity("CheckoutAPI.Models.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("CheckoutAPI.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CheckoutAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Available")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BestDeal")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Discounted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Offer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("TEXT");

                    b.Property<double>("Percent")
                        .HasColumnType("REAL");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = true,
                            BestDeal = false,
                            Discounted = true,
                            Image = "/media/steamdeck.png",
                            Name = "Steam Deck OLED 512GB",
                            Offer = "Free shipping + 200 games",
                            OldPrice = 2799m,
                            Percent = 7.1500000000000004,
                            Price = 2599m,
                            Type = "Steam Deck"
                        },
                        new
                        {
                            Id = 2,
                            Available = true,
                            BestDeal = false,
                            Discounted = true,
                            Image = "/media/steamdeck.png",
                            Name = "Steam Deck 1TB Limited Edition",
                            Offer = "Exclusive colorway + travel case",
                            OldPrice = 3149m,
                            Percent = 7.9500000000000002,
                            Price = 2899m,
                            Type = "Steam Deck"
                        },
                        new
                        {
                            Id = 3,
                            Available = false,
                            BestDeal = false,
                            Discounted = false,
                            Image = "/media/rogallywhite.png",
                            Name = "ROG Ally 1TB Z1 Extreme",
                            Offer = "Free shipping + Meta+ subscription",
                            OldPrice = 2799m,
                            Percent = 14.289999999999999,
                            Price = 2399m,
                            Type = "ROG Ally"
                        },
                        new
                        {
                            Id = 4,
                            Available = false,
                            BestDeal = false,
                            Discounted = false,
                            Image = "/media/rogallyblack.png",
                            Name = "ROG Ally 512GB Z1 Non-Extreme",
                            Offer = "Budget-friendly bundle with charger",
                            OldPrice = 2199m,
                            Percent = 9.0999999999999996,
                            Price = 1999m,
                            Type = "ROG Ally"
                        },
                        new
                        {
                            Id = 5,
                            Available = true,
                            BestDeal = false,
                            Discounted = true,
                            Image = "/media/lenovogo.png",
                            Name = "Legion Go 1TB",
                            Offer = "3 Months Xbox Game Pass + 200 Games",
                            OldPrice = 2899m,
                            Percent = 10.35,
                            Price = 2599m,
                            Type = "Lenovo Go"
                        },
                        new
                        {
                            Id = 6,
                            Available = false,
                            BestDeal = false,
                            Discounted = false,
                            Image = "/media/msiclaw.png",
                            Name = "MSI Claw 128GB",
                            Offer = "Get Asgard’s Wrath 2 with purchase",
                            OldPrice = 2399m,
                            Percent = 12.51,
                            Price = 2099m,
                            Type = "MSI Claw"
                        },
                        new
                        {
                            Id = 7,
                            Available = true,
                            BestDeal = false,
                            Discounted = true,
                            Image = "/media/msiclaw.png",
                            Name = "MSI Claw 512GB",
                            Offer = "Includes exclusive MSI travel pouch",
                            OldPrice = 2699m,
                            Percent = 7.4100000000000001,
                            Price = 2499m,
                            Type = "MSI Claw"
                        });
                });

            modelBuilder.Entity("DeviceSpec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Spec")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("DeviceSpecs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeviceId = 1,
                            Spec = "7.4” HDR OLED display, 1280x800 resolution, up to 90Hz"
                        },
                        new
                        {
                            Id = 2,
                            DeviceId = 1,
                            Spec = "AMD APU: Zen 2 4-core, RDNA 2 GPU with 8 CUs"
                        },
                        new
                        {
                            Id = 3,
                            DeviceId = 1,
                            Spec = "16GB LPDDR5 RAM (6400 MT/s)"
                        },
                        new
                        {
                            Id = 4,
                            DeviceId = 1,
                            Spec = "512GB NVMe SSD"
                        },
                        new
                        {
                            Id = 5,
                            DeviceId = 1,
                            Spec = "Wi-Fi 6E, Bluetooth 5.3"
                        },
                        new
                        {
                            Id = 6,
                            DeviceId = 1,
                            Spec = "50Whr battery, 3–12 hours of gameplay"
                        },
                        new
                        {
                            Id = 7,
                            DeviceId = 1,
                            Spec = "Dual ambient light sensors"
                        },
                        new
                        {
                            Id = 8,
                            DeviceId = 1,
                            Spec = "SteamOS 3.0"
                        },
                        new
                        {
                            Id = 9,
                            DeviceId = 2,
                            Spec = "7.4” HDR OLED screen, etched anti-glare glass"
                        },
                        new
                        {
                            Id = 10,
                            DeviceId = 2,
                            Spec = "AMD APU: Zen 2 4-core, RDNA 2 GPU with 8 CUs"
                        },
                        new
                        {
                            Id = 11,
                            DeviceId = 2,
                            Spec = "16GB LPDDR5 RAM (6400 MT/s)"
                        },
                        new
                        {
                            Id = 12,
                            DeviceId = 2,
                            Spec = "1TB NVMe SSD"
                        },
                        new
                        {
                            Id = 13,
                            DeviceId = 2,
                            Spec = "Wi-Fi 6E, Bluetooth 5.3"
                        },
                        new
                        {
                            Id = 14,
                            DeviceId = 2,
                            Spec = "50Whr battery"
                        },
                        new
                        {
                            Id = 15,
                            DeviceId = 3,
                            Spec = "7” FHD 1080p IPS touchscreen, 120Hz refresh rate"
                        },
                        new
                        {
                            Id = 16,
                            DeviceId = 3,
                            Spec = "AMD Ryzen Z1 Extreme, 8-core/16-thread, 12 RDNA 3 CUs"
                        },
                        new
                        {
                            Id = 17,
                            DeviceId = 3,
                            Spec = "16GB LPDDR5 RAM (6400 MT/s)"
                        },
                        new
                        {
                            Id = 18,
                            DeviceId = 3,
                            Spec = "1TB PCIe 4.0 SSD"
                        },
                        new
                        {
                            Id = 19,
                            DeviceId = 3,
                            Spec = "Wi-Fi 6E, Bluetooth 5.2"
                        },
                        new
                        {
                            Id = 20,
                            DeviceId = 3,
                            Spec = "Windows 11 Home"
                        },
                        new
                        {
                            Id = 21,
                            DeviceId = 3,
                            Spec = "ROG Armoury Crate SE"
                        },
                        new
                        {
                            Id = 22,
                            DeviceId = 3,
                            Spec = "Support for XG Mobile eGPU"
                        },
                        new
                        {
                            Id = 23,
                            DeviceId = 4,
                            Spec = "7” FHD 1080p IPS touchscreen, 120Hz refresh rate"
                        },
                        new
                        {
                            Id = 24,
                            DeviceId = 4,
                            Spec = "AMD Ryzen Z1, 6-core/12-thread, 4 RDNA 3 CUs"
                        },
                        new
                        {
                            Id = 25,
                            DeviceId = 4,
                            Spec = "16GB LPDDR5 RAM (6400 MT/s)"
                        },
                        new
                        {
                            Id = 26,
                            DeviceId = 4,
                            Spec = "512GB PCIe 4.0 SSD"
                        },
                        new
                        {
                            Id = 27,
                            DeviceId = 4,
                            Spec = "Wi-Fi 6E, Bluetooth 5.2"
                        },
                        new
                        {
                            Id = 28,
                            DeviceId = 4,
                            Spec = "Windows 11 Home"
                        },
                        new
                        {
                            Id = 29,
                            DeviceId = 4,
                            Spec = "Adaptive Cooling System"
                        },
                        new
                        {
                            Id = 30,
                            DeviceId = 4,
                            Spec = "Support for XG Mobile"
                        });
                });

            modelBuilder.Entity("CheckoutAPI.Models.Favorite", b =>
                {
                    b.HasOne("Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheckoutAPI.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CheckoutAPI.Models.Order", b =>
                {
                    b.HasOne("Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheckoutAPI.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DeviceSpec", b =>
                {
                    b.HasOne("Device", "Device")
                        .WithMany("Specs")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("CheckoutAPI.Models.User", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Device", b =>
                {
                    b.Navigation("Specs");
                });
#pragma warning restore 612, 618
        }
    }
}
